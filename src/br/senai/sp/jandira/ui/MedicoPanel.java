/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package br.senai.sp.jandira.ui;
import br.senai.sp.jandira.dao.EspecialidadeDAO;
import br.senai.sp.jandira.dao.MedicoDAO;
import br.senai.sp.jandira.dao.PlanoDeSaudeDAO;
import br.senai.sp.jandira.model.Especialidade;
import br.senai.sp.jandira.model.Medico;
import br.senai.sp.jandira.model.TipoOperacao;
import javax.swing.JOptionPane;
import javax.swing.JTable;
/**
 *
 * @author 22282103
 */
public class MedicoPanel extends javax.swing.JPanel {

    int linha;
    /**
     * Creates new form MedicoPanel
     */
    public MedicoPanel() {
        initComponents();
        criarTabelaMedico();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelmedico = new javax.swing.JLabel();
        ExcluirMedico = new javax.swing.JButton();
        AdicionarMedico = new javax.swing.JButton();
        EditarMedico = new javax.swing.JButton();
        scrolltablemedico = new javax.swing.JScrollPane();
        TableMedico = new javax.swing.JTable();

        setLayout(null);

        labelmedico.setText("Medico");
        add(labelmedico);
        labelmedico.setBounds(10, 40, 280, 30);

        ExcluirMedico.setText("jButton1");
        ExcluirMedico.setActionCommand("AdicionarMedico");
        ExcluirMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExcluirMedicoActionPerformed(evt);
            }
        });
        add(ExcluirMedico);
        ExcluirMedico.setBounds(430, 470, 80, 50);

        AdicionarMedico.setText("jButton1");
        AdicionarMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AdicionarMedicoActionPerformed(evt);
            }
        });
        add(AdicionarMedico);
        AdicionarMedico.setBounds(530, 470, 75, 50);

        EditarMedico.setText("jButton1");
        EditarMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditarMedicoActionPerformed(evt);
            }
        });
        add(EditarMedico);
        EditarMedico.setBounds(620, 470, 75, 50);

        TableMedico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrolltablemedico.setViewportView(TableMedico);

        add(scrolltablemedico);
        scrolltablemedico.setBounds(10, 74, 660, 260);
    }// </editor-fold>//GEN-END:initComponents
        
    
    
    
     private void tableMedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMedicoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tableMedicoMouseClicked
    
    
    
private void TableMedicoexcluir(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMedicoexcluir

    }//GEN-LAST:event_tableMedicoexcluir


    private void buttonExcluirMedicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonExcluirMedicoMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_buttonExcluirMedicoMouseClicked
    
    private void ExcluirMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExcluirMedicoActionPerformed
        linha = TableMedico.getSelectedRow();
        
        if (linha != 1){
            excluir();
        } else {
            JOptionPane.showMessageDialog(this, "Por favor, selecione a especialidade que deseja editar!", "Especialidade", JOptionPane.WARNING_MESSAGE);
        }
 
        
    }//GEN-LAST:event_ExcluirMedicoActionPerformed

    private void EditarMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditarMedicoActionPerformed
         linha = TableMedico.getSelectedRow();

        if (linha != -1) {
            editar();
        } else {
            JOptionPane.showMessageDialog(
                    this,
                    "Por favor, selecione a especialidade que deseja editar!",
                    "Especialidade",
                    JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_EditarMedicoActionPerformed

    private void AdicionarMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AdicionarMedicoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AdicionarMedicoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AdicionarMedico;
    private javax.swing.JButton EditarMedico;
    private javax.swing.JButton ExcluirMedico;
    private javax.swing.JTable TableMedico;
    private javax.swing.JLabel labelmedico;
    private javax.swing.JScrollPane scrolltablemedico;
    // End of variables declaration//GEN-END:variables

    private void criarTabelaMedico() {
        
         TableMedico.setModel(EspecialidadeDAO.getTableModel());

            // Desativar o redimensionamento da JTable
            TableMedico.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

            // Definir a largura de cada coluna
            TableMedico.getColumnModel().getColumn(0).setPreferredWidth(100);
            TableMedico.getColumnModel().getColumn(1).setPreferredWidth(300);
            TableMedico.getColumnModel().getColumn(2).setPreferredWidth(300);

            // Impedir/bloquear a movimentação das colunas
            TableMedico.getTableHeader().setReorderingAllowed(false);

            // Bloquear edição das células
            TableMedico.setDefaultEditor(Object.class, null);
            
       

    }

    private void excluir() {
       int resposta = JOptionPane.showConfirmDialog(
                this,
                "Você confirma a exclusão da especialidade selecionado?",
                "Especialidade",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE);

        // Excluir plano de saúde
        if (resposta == 0) {

            EspecialidadeDAO.excluir(getCodigo());
            criarTabelaMedico();
            
    }
}

    private Integer getCodigo() {
String codigoStr = TableMedico.getValueAt(linha, 0).toString();
        return Integer.valueOf(codigoStr);    
    }

    private void editar() {
         Medico medico = new Medico();

        MedicoDialog medicoDialog = new MedicoDialog();

        medicoDialog.setVisible(true);

        criarTabelaMedico();
        
        
        
    }
}




